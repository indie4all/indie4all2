"use strict";(self.webpackChunkCDN=self.webpackChunkCDN||[]).push([[13027],{13027:(t,e,r)=>{r.d(e,{default:()=>n});var c=r(65360),i=r(70583),__decorate=function(t,e,r,c){var i,s=arguments.length,n=s<3?e:null===c?c=Object.getOwnPropertyDescriptor(e,r):c;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(t,e,r,c);else for(var o=t.length-1;o>=0;o--)(i=t[o])&&(n=(s<3?i(n):s>3?i(e,r,n):i(e,r))||n);return s>3&&n&&Object.defineProperty(e,r,n),n},__metadata=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};let s=class CipherService{constructor(t){this.utils=t,this.encoder=new TextEncoder,this.key=this.encoder.encode("2yWfEgocFom9jbWN"),this.iv=this.encoder.encode("AODVNUASDNVVAOVF")}async encrypt(t){const e=await window.crypto.subtle.importKey("raw",this.key,"AES-CBC",!1,["encrypt"]),r=this.utils.str2ab(t),c=await window.crypto.subtle.encrypt({name:"AES-CBC",iv:this.iv},e,r);return btoa(this.utils.ab2str(c))}async decrypt(t){const e=await window.crypto.subtle.importKey("raw",this.key,"AES-CBC",!1,["decrypt"]),r=this.utils.str2ab(atob(t)),c=await window.crypto.subtle.decrypt({name:"AES-CBC",iv:this.iv},e,r);return this.utils.ab2str(c)}};s=__decorate([(0,c.k)({global:!0}),__metadata("design:paramtypes",[i.A])],s);const n=s}}]);